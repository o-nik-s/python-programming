'''Группа биологов в институте биоинформатики завела себе черепашку.

После дрессировки черепашка научилась понимать и запоминать указания биологов следующего вида:
север 10
запад 20
юг 30
восток 40
где первое слово — это направление, в котором должна двигаться черепашка, а число после слова — 
это положительное расстояние в сантиметрах, которое должна пройти черепашка.

Но команды даются быстро, а черепашка ползёт медленно, и программисты догадались, что можно 
написать программу, которая определит, куда в итоге биологи приведут черепашку. Для этого 
программисты просят вас написать программу, которая выведет точку, в которой окажется черепашка 
после всех команд. Для простоты они решили считать, что движение начинается в точке (0, 0), и движение 
на восток увеличивает первую координату, а на север — вторую.

Программе подаётся на вход число команд n, которые нужно выполнить черепашке, после чего n строк 
с самими командами. Вывести нужно два числа в одну строку: первую и вторую координату конечной 
точки черепашки. Все координаты целочисленные.'''


pos = [0, 0]
n = int(input())
for i in range(n):
    move = input().split(" ")
    if move[0] == "север":
        pos[1] += int(move[1])
    elif move[0] == "запад":
        pos[0] -= int(move[1])
    elif move[0] == "юг":
        pos[1] -= int(move[1])
    elif move[0] == "восток":
        pos[0] += int(move[1])
    # print(pos)
print(pos[0], pos[1])


'''Решения других'''

'''l = {'север': [0, 1], 'запад': [-1, 0], 'юг': [0, -1], 'восток': [1, 0]}
coord = [0, 0]
for i in range(int(input())):
    j = input().split()
    coord[0] += l[j[0]][0]*int(j[1])
    coord[1] += l[j[0]][1]*int(j[1])
print(coord[0], " ", coord[1])'''

'''x, y = 0, 0
comp = {'север': [0,1], 'юг':[0 ,-1], 'запад':[-1,0], 'восток':[1,0]}
for i in range(int(input())):
    way = [i for i in input().split()]
    x += comp.get(way[0])[0] * int(way[1])
    y += comp.get(way[0])[1] * int(way[1])
print(x, y)'''

'''direction, position = {"север": [0, 1], "юг": [0, -1], "восток": [1, 0], "запад": [-1, 0]}, [0, 0]
for dir, length in [input().split() for _ in range(int(input()))]:
    position = [position[i] + direction[dir][i] * int(length) for i in range(2)]
print(*position)'''

'''cor = {'север': 0, 'восток': 0, 'юг': 0, 'запад': 0}
for i in range(int(input())):
    s = [j for j in input().split()]
    cor[s[0]] += int(s[1])
print(cor['восток']-cor['запад'], cor['север']-cor['юг'])'''

'''d = {'восток': [1, 0], 'запад': [-1, 0],'юг': [0, -1],'север': [0, 1],}
x = 0
y = 0
n = int(input())
for i in range(n):
    way, step = input().lower().split()
    x += d[way][0] * int(step)
    y += d[way][1] * int(step)
print(x, y)'''

'''pos, vectors = [0, 0], {'север': [0, 1], 'юг': [0, -1], 'восток': [1, 0], 'запад': [-1, 0]}
for direction, distance in [input().split() for _ in range(int(input()))]:
    pos[:] = map((lambda p, v: p + v * int(distance)), pos, vectors[direction])
print(*pos)'''